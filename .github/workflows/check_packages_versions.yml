name: Check Packages Versions

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

env:
  GIT_BRANCH_FOR_PACKAGES_UPGRADES: feature__packages_versions_update

jobs:
  build:
    name: 'Check Packages Versions'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org/
      - name: Step 1 - ⚙️ Setup GitHub Config
        run: |
          git config user.name "🤖 DailyBot"
          git config user.email "ops@dailybot.com"
      - name: Step 2 - ⚙️ Download changes from branch with upgrades
        id: creating_pr_step
        run: |
          BRANCH_CREATED=$(git checkout -b $GIT_BRANCH_FOR_PACKAGES_UPGRADES || 'false')
          echo "branch_created=$BRANCH_CREATED" >> $GITHUB_OUTPUT
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' }}
        name: Step 3 - ⚙️ Install Dependencies
        run: npm install
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' }}
        name: Step 4 - Check Packages Versions
        run: npm run ncu:upgrade
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' }}
        name: Step 4 - ⚙️ Re-install dependencies with upgrades
        run: npm install
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' }}
        name: Step 5 - Check Git Status
        id: check_git_status_step
        run: |
          CHANGES_APPLIED=$(git status --porcelain | tr '\n' ' ' | tr -d '\r')
          echo "changes_applied=$CHANGES_APPLIED" >> $GITHUB_OUTPUT
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' && steps.check_git_status_step.outputs.changes_applied != 'false' }}
        id: git_commit_and_push_changes_step
        name: Step 6 - Commit and push changes to repository branch
        run: |
          git commit -am "Upgrading packages versions"
          GIT_CHANGES_PUSHED=$(git push origin $GIT_BRANCH_FOR_PACKAGES_UPGRADES || 'false')
          echo "git_changes_pushed=$GIT_CHANGES_PUSHED" >> $GITHUB_OUTPUT
      - if: ${{ steps.creating_pr_step.outputs.branch_created != 'false' && steps.check_git_status_step.outputs.changes_applied != 'false' }}
        name: Step 7 - Creating pull request
        id: creating_pull_request_step
        run: |
          gh auth login --with-token <<< "${{ secrets.AUTOMATION_GITHUB_TOKEN }}"
          PR_CREATED=$(gh pr create --title "Upgrading packages versions" --body "Upgrading packages versions body" --base main --head $GIT_BRANCH_FOR_PACKAGES_UPGRADES || 'false')
          echo pr_created=$PR_CREATED" >> $GITHUB_OUTPUT

    outputs:
      branch_created: ${{ steps.creating_pr_step.outputs.branch_created }}
      changes_applied: ${{ steps.check_git_status_step.outputs.changes_applied }}
      git_changes_pushed: ${{ steps.git_commit_and_push_changes_step.outputs.git_changes_pushed }}
      pr_created: ${{ steps.creating_pull_request_step.outputs.pr_created }}
