name: Check Packages Versions

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

env:
  GIT_BRANCH_FOR_PACKAGES_UPGRADES: feature__packages_versions_update

jobs:
  build:
    name: 'Check Packages Versions'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org/
      - name: Step 1 - ⚙️ Setup GitHub Config
        run: |
          git config user.name "🤖 DailyBot"
          git config user.email "ops@dailybot.com"
      - name: Step 2 - ⚙️ Download changes from branch with upgrades
        run: |
          git checkout -B $GIT_BRANCH_FOR_PACKAGES_UPGRADES
          git pull origin $GIT_BRANCH_FOR_PACKAGES_UPGRADES
      - name: Step 3 - ⚙️ Install Dependencies
        run: npm install
      - name: Step 4 - Check Packages Versions
        run: npm run ncu:upgrade
      - name: Step 5 - Check Git Status
        id: check_git_status_step
        run: |
          CHANGES=$(git status --porcelain)
          echo "git_changes=$CHANGES" >> $GITHUB_OUTPUT
      - name: Step 6 - Commit and push changes to repository branch
        run: |
          if [[ -n $CHANGES ]]; then
            git commit -am "Upgrading packages versions"
            git push origin $GIT_BRANCH_FOR_PACKAGES_UPGRADES
          else
            echo "There are no changes in the repository"
          fi
      - name: Step 7 - Creating pull request
        run: |
          if [[ -n $CHANGES ]]; then
            gh auth login --with-token <<< "${{ secrets.AUTOMATION_GITHUB_TOKEN }}"
            gh pr create --title "Upgrading packages versions" --body "Upgrading packages versions body" --base main --head $GIT_BRANCH_FOR_PACKAGES_UPGRADES
          else
            echo "There are no changes in the repository"
          fi

    outputs:
      git_changes: ${{ steps.check_git_status_step.outputs.git_changes }}
