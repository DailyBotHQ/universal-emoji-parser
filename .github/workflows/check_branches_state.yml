name: Check Branches State

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * 2'

jobs:
  check_branches_state:
    name: 'Check Branches State'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Step 1 - ‚öôÔ∏è Setup GitHub Config
        run: |
          git config user.name "ü§ñ DailyBot"
          git config user.email "ops@dailybot.com"
          gh auth login --with-token <<< "${{ secrets.AUTOMATION_GITHUB_TOKEN }}"
      - name: Step 2 - Get all branches of the repository and check if they are up to date
        run: |
          BRANCHES=$(git branch -r)
          NOTIFICATION_MESSAGE="*üëâ <https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|#$GITHUB_RUN_NUMBER> ($GITHUB_REF_NAME) - @here Check branches without updates for more than 5 days.*"$'\n'
          for BRANCH in $BRANCHES
          do
            BRANCH_NAME="${BRANCH//origin\//}"
            AUTHOR=$(git show --no-patch --format='%an' "$BRANCH" | awk '{print $1, $2}')
            LAST_COMMIT_DATE=$(git show --no-patch --format='%ci' "$BRANCH")
            DAYS_SINCE_LAST_COMMIT=$(( ( $(date +%s) - $(date -d "$LAST_COMMIT_DATE" +%s) ) / 86400 ))

            BRANCH_CREATION_DATE=$(git log --reverse --format='%ci' "$BRANCH" | head -1)
            DAYS_SINCE_BRANCH_CREATION=$(( ( $(date +%s) - $(date -d "$BRANCH_CREATION_DATE" +%s) ) / 86400 ))

            DAYS_FROM_LAST_COMMIT_TO_NOTIFY=5
            #if [ DAYS_SINCE_LAST_COMMIT > $DAYS_FROM_LAST_COMMIT_TO_NOTIFY ]; then
            #then
            NOTIFICATION_MESSAGE+="> ‚Ä¢ \`*$BRANCH_NAME*\` by *$AUTHOR*, created *$DAYS_SINCE_BRANCH_CREATION* days ago"$'\n'
            #fi
          done

          JSON_DATA=$(jq -n \
                        --arg msg "$NOTIFICATION_MESSAGE" \
                        --arg channel "${{ vars.DAILYBOT_NOTIFICATION_DEV_CHANNEL }}" \
                        '{message: $msg, target_channels: [$channel]}')
          curl --location 'https://api.dailybot.com/v1/send-message/' \
            --header "X-API-KEY: ${{ secrets.DAILYBOT_API_KEY }}" \
            --header 'Content-Type: application/json' \
            --data "$JSON_DATA"
