name: Code Check

on:
  pull_request:
    branches:
      - 'main'
      - 'main_test'
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pull_request_size:
    name: 'Pull Request Size Labeler'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
          fetch-depth: 2
      - name: Step 1 - ‚öôÔ∏è Setup GitHub Config
        run: |
          git config user.name "ü§ñ DailyBot"
          git config user.email "ops@dailybot.com"
          gh auth login --with-token <<< "${{ secrets.AUTOMATION_GITHUB_TOKEN }}"

      - name: Step 2 - Calculate PR Size and Label
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git fetch origin ${{ github.event.pull_request.head.ref }}
          CHANGES_STATS=$(git diff --shortstat origin/${{ github.event.pull_request.base.ref }}..origin/${{ github.event.pull_request.head.ref }}')
          echo $CHANGES_STATS
          LINES_CHANGED=$(echo $CHANGES_STATS | awk '{print $4+$6}')
          echo "Lines changed: $LINES_CHANGED"

          if [ -z "$LINES_CHANGED" ]; then
            echo "No lines changed or diff failed."
            exit 1
          fi

          if [ $LINES_CHANGED -le 10 ]; then
            SIZE="XS"
          elif [ $LINES_CHANGED -le 100 ]; then
            SIZE="S"
          elif [ $LINES_CHANGED -le 500 ]; then
            SIZE="M"
          elif [ $LINES_CHANGED -le 1000 ]; then
            SIZE="L"
          else
            SIZE="XL"
          fi

          echo "Size: $SIZE"

          if [ $SIZE == "XL" ]; then
            echo "Warning: Large PR detected!"
          fi

          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.AUTOMATION_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels \
            -d '{
                "labels": ["'$SIZE'"]
              }'

  setup:
    name: 'Setup Application'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Step 0 - üìÅ Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Step 1 - ‚öôÔ∏è Install Dependencies
        run: npm install

  validate_linters_and_code_format:
    needs: setup
    name: 'Validate Linters and Code Format'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Step 0 - üìÅ Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Step 1 - üß™ Run eslint linter
        run: npm run eslint:check
      - name: Step 2 - üß™üß™ Run prettier
        run: npm run prettier:check

  tests:
    needs: validate_linters_and_code_format
    name: 'Run tests'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Step 0 - üìÅ Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Step 1 - üß™ Run tests
        run: npm run test
